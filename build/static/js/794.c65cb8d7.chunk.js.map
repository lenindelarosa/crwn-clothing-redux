{"version":3,"file":"static/js/794.c65cb8d7.chunk.js","mappings":"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","sources":["components/button/button.component.jsx","components/button/button.styles.jsx","components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","routes/checkout/checkout.styles.jsx","components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","components/shipping-form/shipping-form.styles.jsx","components/payment-form/payment-form.styles.jsx","components/payment-form/payment-form.component.jsx","components/shipping-form/shipping-form.component.jsx","routes/checkout/checkout.component.jsx","store/cart/cart.action.js","store/cart/cart.selector.js","store/user/user.selector.js"],"sourcesContent":["import { BaseButton, GoogleSignInButton, InvertedButton, ButtonSpinner} from './button.styles'\n\nexport const BUTTON_TYPE_CLASSES = {\n    base: 'base',\n    google: 'google-sign-in',\n    inverted: 'inverted'\n};\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) => (\n    {\n        [BUTTON_TYPE_CLASSES.base]: BaseButton,\n        [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n        [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n    }[buttonType]\n)\n\n\nconst Button = ({ children, buttonType, isLoading, ...otherProps }) => {\n    const CustomButton = getButton(buttonType);\n    return (\n        <CustomButton disabled={isLoading}{...otherProps} >\n            {isLoading ? <ButtonSpinner/> : children}\n        </CustomButton>\n    )\n};\n\nexport default Button;","import styled from 'styled-components';\nimport { SpinnerContainer } from '../spinner/spinner.styles';\n\nexport const BaseButton = styled.button`\n  //min-width: 165px;\n  width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  font-size: 15px;\n  background-color: black;\n  color: white;\n  text-transform: uppercase;\n  font-family: 'Open Sans Condensed';\n  font-weight: bolder;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;      \n  align-items: center;\n  \n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }\n`;\n\nexport const GoogleSignInButton = styled(BaseButton)`\n  background-color: #4285f4;\n  color: white;\n\n  &:hover {\n    background-color: #357ae8;\n    border: none;\n  }  \n`;\n\nexport const InvertedButton = styled(BaseButton)`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }  \n`;\n\nexport const ButtonSpinner = styled(SpinnerContainer)`\n  width: 30px;\n  height: 30px;\n`","import styled, { css } from 'styled-components';\n\nconst subColor = 'grey';\nconst mainColor = 'black';\n\nconst shrinkLabelStyles = css`\n  top: -14px;\n  font-size: 12px;\n  color: ${mainColor};\n`;\n\nexport const FormInputLabel = styled.label`\n  color: ${subColor};\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n  ${({ shrink }) => shrink && shrinkLabelStyles};\n`;\n\nexport const Input = styled.input`\n  background: none;\n  background-color: white;\n  color: ${subColor};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${subColor};\n  margin: 25px 0;\n  &:focus {\n    outline: none;\n  }\n  &:focus ~ ${FormInputLabel} {\n    ${shrinkLabelStyles};\n  }\n`;\n\nexport const Group = styled.div`\n  position: relative;\n  margin: 45px 0;\n  input[type='password'] {\n    letter-spacing: 0.3em;\n  }\n`;","import { FormInputLabel, Input, Group } from './form-input.styles'\n\nconst FormInput = ({ label, groupStyle, ...otherProps }) => {\n    return (\n        <Group style={groupStyle}>\n            <Input {...otherProps}/>\n            {label && (\n                <FormInputLabel shrink={otherProps.value.length}>\n                    {label}\n                </FormInputLabel>\n            )}\n        </Group> \n    );\n};\n\nexport default FormInput;","import styled from 'styled-components';\n\n\n\nexport const CheckoutContainer = styled.div`\n  width: 70%;\n  min-height: 50vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px auto 0;\n\n  @media only screen \n  and (min-device-width : 200px) \n  and (max-device-width : 480px) {\n    width: 90%;\n  }\n\n  h2 {\n    font-size: min(max(20px, 2.5vw), 36px);\n  }\n`;\n\n/* Smartphones (portrait and landscape) ----------- */\n\n\nexport const CheckoutHeader = styled.div`\n  width: 100%;\n  padding: 10px 0;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgrey;\n  align-items: center;\n`;\n\nexport const HeaderBlock = styled.div`\n  text-transform: capitalize;\n  width: 23%;\n  font-size: min(max(10px, 1.8vw), 22px);\n\n  &:last-child {\n    width: 8%;\n    }\n`;\nexport const Total = styled.span`\n  margin-top: 30px;\n  margin-left: auto;\n  font-size: min(max(20px, 2.5vw), 36px);\n`;","import styled from 'styled-components';\n\nexport const CheckoutItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 100px;\n  border-bottom: 1px solid darkgrey;\n  padding: 15px 0;\n  font-size: 20px;\n  align-items: center;  \n`;\n\nexport const ImageContainer = styled.div`\n  width: 23%;\n  padding-right: 15px;\n\n  img {\n    width: 95%;\n    height: 100%;\n  }  \n`;\n\nexport const BaseSpan = styled.span`\n  width: 23%;\n  //font-size: min(max(15px, 1.5vw), 20px);\n  font-size: min(max(10px, 2.0vw), 18px);\n`\n\nexport const Quantity = styled.span`\n  display: flex;\n  width: 23%;\n  font-size: min(max(10px, 2.0vw), 18px);\n`;\n\nexport const Arrow = styled.span`\n  cursor: pointer;\n  font-size: min(max(10px, 2.0vw), 18px);\n`;\n\nexport const Value = styled.span`\n  margin: 0 10px;\n`;\n\nexport const ButtonContainer = styled.div`\n  padding-left: 12px;\n  cursor: pointer;\n`;\n\n  ","import { CheckoutItemContainer, ImageContainer, BaseSpan, Value, ButtonContainer, Quantity, Arrow } from './checkout-item.styles';\nimport { removeItemFromCart, addItemToCart, delItemFromCart } from '../../store/cart/cart.action';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCartItems } from '../../store/cart/cart.selector';\n\nconst CheckoutItem = ({ cartItem }) => {\n    const { name, quantity, imageUrl, price } = cartItem;\n\n    const dispatch = useDispatch();\n    const cartItems = useSelector(selectCartItems);\n\n    const removeItemHandler = () => dispatch(removeItemFromCart(cartItems, cartItem));\n    const addItemHandler = () => dispatch(addItemToCart(cartItems, cartItem));\n    const deleteItemHandler = () => dispatch(delItemFromCart(cartItems, cartItem));\n\n\n    return(\n        <CheckoutItemContainer>\n            <ImageContainer>\n                <img src={imageUrl} alt={`${name}`} />\n            </ImageContainer>\n            <BaseSpan>{name}</BaseSpan>\n            \n            <Quantity>\n                <Arrow onClick={deleteItemHandler}>\n                    &#10094;\n                </Arrow>\n                <Value>{quantity}</Value>\n                <Arrow onClick={addItemHandler}>\n                    &#10095;\n                </Arrow>\n            </Quantity>\n            <BaseSpan>${price}</BaseSpan>\n            <ButtonContainer onClick={removeItemHandler}>&#10005;</ButtonContainer>\n        </CheckoutItemContainer>\n    );\n};\n\nexport default CheckoutItem;","import styled from 'styled-components';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport FormInput from '../form-input/form-input.component';\nimport Button from '../button/button.component';\n\nexport const ShippingFormContainer = styled.form`\n    display: flex;\n    width: 70%;\n    flex-direction: column;\n    margin: 50px auto 0;\n    font-size: min(max(10px, 2.0vw), 18px);\n\n    @media only screen \n    and (min-device-width : 200px) \n    and (max-device-width : 480px) {\n        width: 90%;\n  }\n`;\n\nexport const CountrySelectorContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 45% 45%;\n    grid-gap: 10% ;\n    margin-bottom: 25px;\n`;\n\nexport const ZipCodeAndNumberContainer = styled.div`\n    display: grid;\n    grid-template-columns: 45% 45%;\n    grid-gap: 10% ;\n    margin-bottom: 25px;\n`;\n\nexport const CustomCountryDropdown = styled(CountryDropdown)`\n    font-size: min(max(10px, 2.0vw), 18px);\n    font-weight: normal;\n    cursor: pointer;\n    padding: 5px;\n`;\n\nexport const CustomRegionDropdown = styled(RegionDropdown)`\n    font-size: min(max(10px, 2.0vw), 18px);\n    font-weight: normal;\n    cursor: pointer;\n    padding: 5px;\n`;\n\nexport const AddressContainer = styled.div`\n    margin: 0px 0px !important; \n`;\n\nexport const CustomFormInput = styled(FormInput)`\n    ::-webkit-inner-spin-button{\n        -webkit-appearance: none; \n        margin: 0; \n    }\n    ::-webkit-outer-spin-button{\n        -webkit-appearance: none; \n        margin: 0; \n    }    \n`;\n\nexport const ValidateAddressButton = styled(Button)`\n    font-size: min(max(10px, 2.0vw), 18px);\n    :disabled,\n    [disabled]{\n        border: 1px solid #999999;\n        background-color: #cccccc;\n        color: #666666;\n    }\n`;","import styled from 'styled-components';\nimport Button from '../button/button.component';\n\nexport const PaymentFormContainer = styled.div`\n    display: flex;\n    width: 60%;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    border-top: 1px solid darkgrey;\n    margin: 10px 30px;\n    min-width: 400px;\n\n    @media only screen \n    and (min-device-width : 200px) \n    and (max-device-width : 480px) {\n    width: 90%;\n  }\n\n  h2 {\n    font-size: min(max(20px, 2.5vw), 36px);\n  }\n`;\n\nexport const FormContainer = styled.form`\n    width: 80%;\n    justify-content: center;\n    height: 100px;\n    margin: 10px 10px;\n`;\n\nexport const PaymentButton = styled(Button)`\n  margin-left: auto;\n  margin-top: 30px;\n`;","import { useState } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { selectCartTotal } from \"../../store/cart/cart.selector\";\nimport FormInput from \"../form-input/form-input.component\";\n\nimport { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\nimport { clearCartItems } from \"../../store/cart/cart.action\";\nimport { useDispatch } from \"react-redux\";\n\nimport { PaymentFormContainer, FormContainer, PaymentButton } from './payment-form.styles';\n\nconst PaymentForm = () => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n    const [nameOnCard, setNameOnCard] = useState('');\n\n    const amount = useSelector(selectCartTotal);\n\n    const paymentHandler = async (event) => {\n        event.preventDefault();\n\n        if(!stripe || !elements) {\n            return;\n        }\n\n        setIsProcessingPayment(true);\n\n        const response = await fetch('/.netlify/functions/create-payment-intent', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ amount: amount * 100 })\n        }).then(res => res.json());\n\n        const { paymentIntent: { client_secret }} = response;\n\n        const paymentResult = await stripe.confirmCardPayment(client_secret, {\n            payment_method: {\n                card: elements.getElement(CardElement),\n                billing_details: {\n                    name: nameOnCard ? nameOnCard : 'Guest'\n                }\n            }\n        })\n\n        setIsProcessingPayment(false);\n\n        if (paymentResult.error){\n            alert(paymentResult.error);\n        } else {\n            if(paymentResult.paymentIntent.status === 'succeeded'){\n                alert('Payment was successful!');\n                dispatch(clearCartItems());\n                navigate('/order-confirmation');\n            }\n        }\n    };\n\n    const changeHandler = (event) => {\n        const { value } = event.target;\n        setNameOnCard(value);\n    }\n\n    return (\n        <PaymentFormContainer>\n            <h2>Credit Card Payment</h2>\n            <FormContainer onSubmit={paymentHandler}>\n                <FormInput required label=\"Name on card\" type=\"text\" onChange={changeHandler} name=\"nameOnCard\" value={nameOnCard}/>\n                <CardElement />\n                <PaymentButton isLoading={isProcessingPayment} buttonType={BUTTON_TYPE_CLASSES.inverted}> Pay now </PaymentButton>\n            </FormContainer>\n        </PaymentFormContainer>\n    )\n};\n\nexport default PaymentForm;","import { useState, useRef } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\nimport { createUserAdress } from '../../utils/firebase/firebase.utils';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentUser } from '../../store/user/user.selector';\nimport { \n    ShippingFormContainer, \n    CustomCountryDropdown, \n    CustomRegionDropdown, \n    CountrySelectorContainer, \n    AddressContainer,\n    CustomFormInput,\n    ValidateAddressButton,\n    ZipCodeAndNumberContainer\n } from './shipping-form.styles';\n\n import PaymentForm from '../payment-form/payment-form.component';\n\nconst defaultShippingAddress = {\n    country: '',\n    region: '',\n    fullName: '',\n    streetAddress: '',\n    cityName: '',\n    zipCode: '',\n    phoneNumber: ''\n}\n\nconst ShippingForm = () => {\n\n    const myRef = useRef(null);\n    const executeScroll = () => myRef.current.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\n\n    const [shippingAddress, setShippingAddress] = useState(defaultShippingAddress);\n    const [isAddressValidated, setIsAddressValidated] = useState(false);\n    const { country, region, fullName, streetAddress, cityName, zipCode, phoneNumber } = shippingAddress;\n    const currentUser = useSelector(selectCurrentUser);\n\n    const onChangeHandler = (event) => {\n        const { name, value } = event.target;\n        setShippingAddress({ ...shippingAddress, [name]: value});\n    };\n\n    const selectCountryHandler = (value) => {\n        setShippingAddress({ ...shippingAddress, country: value });\n    }\n\n    const selectRegionHandler = (value) => {\n        setShippingAddress({ ...shippingAddress, region: value});\n    }\n\n    const submitAddressHandler = async (event) => {\n        event.preventDefault();\n        try {\n            await createUserAdress(currentUser, shippingAddress);\n            setIsAddressValidated(true);\n            executeScroll();\n        } catch (error) {\n            console.log('Address is invalid.')\n        }\n    }\n\n    return(\n        <>\n            <ShippingFormContainer onSubmit={submitAddressHandler}>\n                <CountrySelectorContainer>\n                    <h3>Country:</h3>\n                    <h3>Region:</h3>\n                    <CustomCountryDropdown\n                        name=\"country\"\n                        value={country}\n                        onChange={selectCountryHandler}\n                        priorityOptions={[\"CA\", \"US\", \"GB\"]} \n                        disabled={isAddressValidated} />\n                    <CustomRegionDropdown\n                        name=\"region\"\n                        country={country}\n                        value={region}\n                        onChange={selectRegionHandler} \n                        disabled={isAddressValidated} />\n                </CountrySelectorContainer>\n                <AddressContainer>\n                    <FormInput disabled={isAddressValidated} groupStyle={{ margin: 0}} required label=\"Full name\" type=\"text\" onChange={onChangeHandler} name=\"fullName\" value={fullName}/>\n                    <FormInput disabled={isAddressValidated} groupStyle={{ margin: 0}} required label=\"Street address\" type=\"text\" onChange={onChangeHandler} name=\"streetAddress\" value={streetAddress}/>\n                    <FormInput disabled={isAddressValidated} groupStyle={{ margin: 0}}  required label=\"City name\" type=\"text\" onChange={onChangeHandler} name=\"cityName\" value={cityName}/>\n                    <ZipCodeAndNumberContainer>\n                        <CustomFormInput disabled={isAddressValidated} required groupStyle={{ margin: 0}}  label=\"Zip code\" type=\"number\" onChange={onChangeHandler} name=\"zipCode\" value={zipCode}/>\n                        <CustomFormInput disabled={isAddressValidated} required groupStyle={{ margin: 0}}  label=\"Phone number\" type=\"number\" onChange={onChangeHandler} name=\"phoneNumber\" value={phoneNumber}/>\n                    </ZipCodeAndNumberContainer>\n                </AddressContainer>\n                <ValidateAddressButton disabled={isAddressValidated} buttonType={BUTTON_TYPE_CLASSES.inverted}> {(!isAddressValidated)?'Next -> Payment details': 'Continue with payment.'} </ValidateAddressButton>\n            </ShippingFormContainer>\n            {\n                isAddressValidated ? <PaymentForm /> : null\n            } \n            <div style={{ height: 100}} ref={myRef}>\n                &nbsp;\n            </div>\n        </>\n    )\n};\n\nexport default ShippingForm;","import { CheckoutContainer, CheckoutHeader, HeaderBlock, Total } from './checkout.styles.jsx';\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\nimport { useSelector } from 'react-redux';\nimport { selectCartTotal, selectCartItems } from '../../store/cart/cart.selector.js';\nimport ShippingForm from '../../components/shipping-form/shipping-form.component.jsx';\n\n\nconst Checkout = () => {\n\n    const cartItems = useSelector(selectCartItems);\n    const cartTotal = useSelector(selectCartTotal);\n\n\n    return(\n        <CheckoutContainer>\n            { cartItems.length ? (\n                <CheckoutHeader>\n                <HeaderBlock>\n                    <span>Product</span>\n                </HeaderBlock>\n                <HeaderBlock>\n                    <span>Description</span>\n                </HeaderBlock>\n                <HeaderBlock>\n                    <span>Quantity</span>\n                </HeaderBlock>\n                <HeaderBlock>\n                    <span>Price</span>\n                </HeaderBlock>\n                <HeaderBlock>\n                    <span></span>\n                </HeaderBlock>\n            </CheckoutHeader>             \n            ) : (<h3> Your cart is empty.</h3>)}\n                {cartItems.map((item) => (\n                    <CheckoutItem key={item.id} cartItem={item}/>\n                ))}\n            <Total>TOTAL: ${cartTotal}</Total>\n            <h2> Shipping information</h2>\n            <ShippingForm />\n        </CheckoutContainer>\n    );\n};\n\nexport default Checkout;","import { createAction } from \"../../utils/reducer.utils\";\nimport { CART_ACTION_TYPES } from \"./cart.types\";\n\nexport const setIsCartOpen = (boolean) => \n    createAction(CART_ACTION_TYPES.TOOGLE_CART_OPEN, boolean);\n\n// const updateCartItemsReducer = (newCartItems) => {\n//     const newCartTotal = newCartItems.reduce((accTotal, cartItem) => accTotal + (cartItem.quantity * cartItem.price), 0);\n\n//     const newCartCount = newCartItems.reduce((total, cartItem)=> total + cartItem.quantity, 0);\n\n//     return [...newCartItems, {\n//         cartTotal: newCartTotal, \n//         cartCount: newCartCount }];\n// };\n\nconst addCartItem = (cartItems, productToAdd) => {\n\n    const existingCartItem = cartItems.find(\n        (cartItem) => cartItem.id === productToAdd.id\n    );\n    \n    if(existingCartItem) {\n        return cartItems.map((cartItem) =>\n            cartItem.id === productToAdd.id\n            ? {...cartItem, quantity: cartItem.quantity +1 }\n            : cartItem\n        )};\n        return [...cartItems, { ...productToAdd, quantity: 1 }];\n        //createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n    };\n\nconst delCartItem = (cartItems, productToDelete) => {\n    const isLastCartItem = cartItems.find(\n        (cartItem) => cartItem.id === productToDelete.id && cartItem.quantity===1\n    );\n    \n    if(!isLastCartItem) {\n        return cartItems.map((cartItem) =>\n            cartItem.id === productToDelete.id\n            ? {...cartItem, quantity: cartItem.quantity -1 }\n            : cartItem\n        );\n        } else {\n            return cartItems.filter((item) => item.id !== productToDelete.id);\n        }\n    };\n    \nconst removeCartItem = (cartItems, productToRemove) => {\n    return cartItems.filter((item) => item.id !== productToRemove.id);\n};\n    \nexport const addItemToCart = (cartItems, productToAdd) => {\n    const newCartItems= addCartItem(cartItems, productToAdd);\n    return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n};\n\nexport const delItemFromCart = (cartItems, productToDelete) => {\n    const newCartItems= delCartItem(cartItems, productToDelete);\n    return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n};\n\nexport const removeItemFromCart = (cartItems, productToRemove) => {\n    const newCartItems= removeCartItem(cartItems, productToRemove);\n    return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n};\n\nexport const clearCartItems = () => {\n    return createAction(CART_ACTION_TYPES.CLEAR_CART_ITEMS);\n}","import { createSelector } from 'reselect';\n\nconst selectCartReducer = (state) => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCartReducer],\n    (cart) => cart.cartItems\n);\n\nexport const selectIsCartOpen = createSelector(\n    [selectCartReducer],\n    (cart) => cart.isCartOpen\n);\n\nexport const selectCartCount = createSelector(\n    [selectCartItems],\n    (cartItems) => cartItems.reduce((total, cartItem)=> total + cartItem.quantity, 0)\n);\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    (cartItems) => cartItems.reduce((accTotal, cartItem) => accTotal + (cartItem.quantity * cartItem.price), 0)\n);","export const selectCurrentUser = (state) => state.user.currentUser;"],"names":["BUTTON_TYPE_CLASSES","base","google","inverted","children","buttonType","isLoading","otherProps","CustomButton","BaseButton","GoogleSignInButton","InvertedButton","getButton","disabled","styled","ButtonSpinner","SpinnerContainer","subColor","shrinkLabelStyles","css","FormInputLabel","shrink","Input","Group","label","groupStyle","style","value","length","CheckoutContainer","CheckoutHeader","HeaderBlock","Total","CheckoutItemContainer","ImageContainer","BaseSpan","Quantity","Arrow","Value","ButtonContainer","cartItem","name","quantity","imageUrl","price","dispatch","useDispatch","cartItems","useSelector","selectCartItems","src","alt","onClick","delItemFromCart","addItemToCart","removeItemFromCart","ShippingFormContainer","CountrySelectorContainer","ZipCodeAndNumberContainer","CustomCountryDropdown","CountryDropdown","CustomRegionDropdown","RegionDropdown","AddressContainer","CustomFormInput","FormInput","ValidateAddressButton","Button","PaymentFormContainer","FormContainer","PaymentButton","stripe","useStripe","elements","useElements","navigate","useNavigate","useState","isProcessingPayment","setIsProcessingPayment","nameOnCard","setNameOnCard","amount","selectCartTotal","paymentHandler","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","response","client_secret","paymentIntent","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","paymentResult","error","alert","status","clearCartItems","onSubmit","required","type","onChange","target","defaultShippingAddress","country","region","fullName","streetAddress","cityName","zipCode","phoneNumber","myRef","useRef","shippingAddress","setShippingAddress","isAddressValidated","setIsAddressValidated","currentUser","selectCurrentUser","onChangeHandler","submitAddressHandler","createUserAdress","current","scrollIntoView","behavior","block","inline","console","log","priorityOptions","margin","height","ref","cartTotal","map","item","id","setIsCartOpen","boolean","createAction","CART_ACTION_TYPES","productToAdd","newCartItems","find","addCartItem","productToDelete","filter","delCartItem","productToRemove","removeCartItem","selectCartReducer","state","cart","createSelector","selectIsCartOpen","isCartOpen","selectCartCount","reduce","total","accTotal","user"],"sourceRoot":""}